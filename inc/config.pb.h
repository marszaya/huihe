// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#ifndef PROTOBUF_config_2eproto__INCLUDED
#define PROTOBUF_config_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_config_2eproto();
void protobuf_AssignDesc_config_2eproto();
void protobuf_ShutdownFile_config_2eproto();

class ConfigDefine;

enum ConfigDefine_ATTR_CONFIG {
  ConfigDefine_ATTR_CONFIG_DEF_FACTOR = 100,
  ConfigDefine_ATTR_CONFIG_RATE_BASE = 1000
};
bool ConfigDefine_ATTR_CONFIG_IsValid(int value);
const ConfigDefine_ATTR_CONFIG ConfigDefine_ATTR_CONFIG_ATTR_CONFIG_MIN = ConfigDefine_ATTR_CONFIG_DEF_FACTOR;
const ConfigDefine_ATTR_CONFIG ConfigDefine_ATTR_CONFIG_ATTR_CONFIG_MAX = ConfigDefine_ATTR_CONFIG_RATE_BASE;
const int ConfigDefine_ATTR_CONFIG_ATTR_CONFIG_ARRAYSIZE = ConfigDefine_ATTR_CONFIG_ATTR_CONFIG_MAX + 1;

enum ConfigDefine_VAL_TYPE {
  ConfigDefine_VAL_TYPE_VAL_TYPE_STRING = 1,
  ConfigDefine_VAL_TYPE_VAL_TYPE_INT32 = 2,
  ConfigDefine_VAL_TYPE_VAL_TYPE_INT64 = 3
};
bool ConfigDefine_VAL_TYPE_IsValid(int value);
const ConfigDefine_VAL_TYPE ConfigDefine_VAL_TYPE_VAL_TYPE_MIN = ConfigDefine_VAL_TYPE_VAL_TYPE_STRING;
const ConfigDefine_VAL_TYPE ConfigDefine_VAL_TYPE_VAL_TYPE_MAX = ConfigDefine_VAL_TYPE_VAL_TYPE_INT64;
const int ConfigDefine_VAL_TYPE_VAL_TYPE_ARRAYSIZE = ConfigDefine_VAL_TYPE_VAL_TYPE_MAX + 1;

// ===================================================================

class ConfigDefine : public ::google::protobuf::MessageLite {
 public:
  ConfigDefine();
  virtual ~ConfigDefine();

  ConfigDefine(const ConfigDefine& from);

  inline ConfigDefine& operator=(const ConfigDefine& from) {
    CopyFrom(from);
    return *this;
  }

  static const ConfigDefine& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ConfigDefine* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ConfigDefine* other);

  // implements Message ----------------------------------------------

  ConfigDefine* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ConfigDefine& from);
  void MergeFrom(const ConfigDefine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef ConfigDefine_ATTR_CONFIG ATTR_CONFIG;
  static const ATTR_CONFIG DEF_FACTOR = ConfigDefine_ATTR_CONFIG_DEF_FACTOR;
  static const ATTR_CONFIG RATE_BASE = ConfigDefine_ATTR_CONFIG_RATE_BASE;
  static inline bool ATTR_CONFIG_IsValid(int value) {
    return ConfigDefine_ATTR_CONFIG_IsValid(value);
  }
  static const ATTR_CONFIG ATTR_CONFIG_MIN =
    ConfigDefine_ATTR_CONFIG_ATTR_CONFIG_MIN;
  static const ATTR_CONFIG ATTR_CONFIG_MAX =
    ConfigDefine_ATTR_CONFIG_ATTR_CONFIG_MAX;
  static const int ATTR_CONFIG_ARRAYSIZE =
    ConfigDefine_ATTR_CONFIG_ATTR_CONFIG_ARRAYSIZE;

  typedef ConfigDefine_VAL_TYPE VAL_TYPE;
  static const VAL_TYPE VAL_TYPE_STRING = ConfigDefine_VAL_TYPE_VAL_TYPE_STRING;
  static const VAL_TYPE VAL_TYPE_INT32 = ConfigDefine_VAL_TYPE_VAL_TYPE_INT32;
  static const VAL_TYPE VAL_TYPE_INT64 = ConfigDefine_VAL_TYPE_VAL_TYPE_INT64;
  static inline bool VAL_TYPE_IsValid(int value) {
    return ConfigDefine_VAL_TYPE_IsValid(value);
  }
  static const VAL_TYPE VAL_TYPE_MIN =
    ConfigDefine_VAL_TYPE_VAL_TYPE_MIN;
  static const VAL_TYPE VAL_TYPE_MAX =
    ConfigDefine_VAL_TYPE_VAL_TYPE_MAX;
  static const int VAL_TYPE_ARRAYSIZE =
    ConfigDefine_VAL_TYPE_VAL_TYPE_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ConfigDefine)
 private:


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_config_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_config_2eproto();
  #endif
  friend void protobuf_AssignDesc_config_2eproto();
  friend void protobuf_ShutdownFile_config_2eproto();

  void InitAsDefaultInstance();
  static ConfigDefine* default_instance_;
};
// ===================================================================


// ===================================================================

// ConfigDefine


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2eproto__INCLUDED
